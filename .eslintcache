[{"C:\\Users\\Amine\\Documents\\Dev\\Projet\\covidtracker\\src\\index.js":"1","C:\\Users\\Amine\\Documents\\Dev\\Projet\\covidtracker\\src\\App.js":"2","C:\\Users\\Amine\\Documents\\Dev\\Projet\\covidtracker\\src\\components\\SelectList.js":"3","C:\\Users\\Amine\\Documents\\Dev\\Projet\\covidtracker\\src\\components\\index.js":"4","C:\\Users\\Amine\\Documents\\Dev\\Projet\\covidtracker\\src\\components\\Chart.js":"5","C:\\Users\\Amine\\Documents\\Dev\\Projet\\covidtracker\\src\\components\\Cards.js":"6","C:\\Users\\Amine\\Documents\\Dev\\Projet\\covidtracker\\src\\components\\Map.js":"7"},{"size":512,"mtime":1610717928723,"results":"8","hashOfConfig":"9"},{"size":4666,"mtime":1611612465323,"results":"10","hashOfConfig":"9"},{"size":916,"mtime":1611614324725,"results":"11","hashOfConfig":"9"},{"size":96,"mtime":1611160776850,"results":"12","hashOfConfig":"9"},{"size":3178,"mtime":1611614949961,"results":"13","hashOfConfig":"9"},{"size":2142,"mtime":1611615563523,"results":"14","hashOfConfig":"9"},{"size":2689,"mtime":1611307399905,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"6b64ml",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"18"},"C:\\Users\\Amine\\Documents\\Dev\\Projet\\covidtracker\\src\\index.js",[],["32","33"],"C:\\Users\\Amine\\Documents\\Dev\\Projet\\covidtracker\\src\\App.js",[],"C:\\Users\\Amine\\Documents\\Dev\\Projet\\covidtracker\\src\\components\\SelectList.js",[],"C:\\Users\\Amine\\Documents\\Dev\\Projet\\covidtracker\\src\\components\\index.js",[],"C:\\Users\\Amine\\Documents\\Dev\\Projet\\covidtracker\\src\\components\\Chart.js",["34"],"C:\\Users\\Amine\\Documents\\Dev\\Projet\\covidtracker\\src\\components\\Cards.js",[],"C:\\Users\\Amine\\Documents\\Dev\\Projet\\covidtracker\\src\\components\\Map.js",["35"],"import React, { Component, Fragment } from \"react\";\r\nimport mapboxgl from \"mapbox-gl\";\r\nimport \"mapbox-gl/dist/mapbox-gl.css\";\r\nimport * as countryz from \"../country.json\";\r\n\r\nmapboxgl.accessToken =\r\n  \"pk.eyJ1IjoiYW1pbmVhYmRlbGxpIiwiYSI6ImNranU1ZWZzczJ6bjcyem1qZ25zb3UxbjYifQ.hbedsblNSZl7EnltQgLLkQ\";\r\n\r\nlet centroid;\r\nlet map, markers; // Bonne pratique ou non??????\r\n// let option = document.querySelectorAll(\".optionList\");\r\nexport default class Map extends Component {\r\n  state = {\r\n    lng: 2.3863,\r\n    lat: 47.261,\r\n    zoom: 4.5,\r\n    loading: true,\r\n  };\r\n\r\n  componentDidMount() {\r\n    // Création de la carte\r\n    map = new mapboxgl.Map({\r\n      container: this.mapContainer,\r\n      style: \"mapbox://styles/amineabdelli/ckjuc8dph019219o4mu8r4lth\",\r\n      center: [this.state.lng, this.state.lat],\r\n      zoom: this.state.zoom,\r\n    });\r\n    // Focus de la carte par défault\r\n    // map.on(\"move\", () => {\r\n    //   this.setState({\r\n    //     lng: map.getCenter().lng.toFixed(4),\r\n    //     lat: map.getCenter().lat.toFixed(4),\r\n    //     zoom: map.getZoom().toFixed(2),\r\n    //   });\r\n    // });\r\n\r\n    // Ajout des marqueurs par défaut au premier rendu\r\n    markers = Object.entries(this.props.dataTargeted).map(\r\n      ([key, value], index) => {\r\n        return new mapboxgl.Marker({\r\n          color: \"#FFFFFF\",\r\n          draggable: false,\r\n        })\r\n          .setLngLat([value.long, value.lat])\r\n          .addTo(map);\r\n      }\r\n    );\r\n  }\r\n\r\n  componentDidUpdate(/*prevProps, prevState, snapshot*/) {\r\n    // Suppresion anciens marqueurs\r\n    markers.forEach((marker) => marker.remove());\r\n\r\n    // Ajout des nouveaux marqueurs // Marqueurs OK\r\n    markers = Object.entries(this.props.dataTargeted).map(([key, value]) => {\r\n      centroid = value;\r\n      return new mapboxgl.Marker({\r\n        color: \"#FFFFFF\",\r\n        draggable: false,\r\n      })\r\n        .setLngLat([value.long, value.lat])\r\n        .addTo(map);\r\n    });\r\n\r\n    // fetch de country.json\r\n    Object.entries(countryz.default).map(([key, count]) => {\r\n      if (count.name === centroid.countryRegion) {\r\n        map.flyTo({\r\n          center: [count.long, count.lat],\r\n          zoom: 4,\r\n          essential: true,\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        {this.myMap}\r\n        <div className=\".sideBar\">\r\n          Longitude: {this.state.lng} | Latitude: {this.state.lat} | Zoom:{\" \"}\r\n          {this.state.zoom}\r\n        </div>\r\n        <div className=\"mapWrapper\">\r\n          <div\r\n            className=\"mapContainer\"\r\n            ref={(el) => (this.mapContainer = el)}\r\n          />\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n",{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":2,"column":10,"nodeType":"42","messageId":"43","endLine":2,"endColumn":14},{"ruleId":"44","severity":1,"message":"45","line":66,"column":57,"nodeType":"46","messageId":"47","endLine":66,"endColumn":59},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],"no-unused-vars","'Line' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation"]