[{"C:\\Users\\Amine\\Documents\\Dev\\Projet\\covidtracker\\src\\index.js":"1","C:\\Users\\Amine\\Documents\\Dev\\Projet\\covidtracker\\src\\App.js":"2","C:\\Users\\Amine\\Documents\\Dev\\Projet\\covidtracker\\src\\components\\SelectList.js":"3","C:\\Users\\Amine\\Documents\\Dev\\Projet\\covidtracker\\src\\components\\index.js":"4","C:\\Users\\Amine\\Documents\\Dev\\Projet\\covidtracker\\src\\components\\Chart.js":"5","C:\\Users\\Amine\\Documents\\Dev\\Projet\\covidtracker\\src\\components\\Cards.js":"6","C:\\Users\\Amine\\Documents\\Dev\\Projet\\covidtracker\\src\\components\\Map.js":"7","C:\\Users\\Amine\\Documents\\Dev\\Projet\\covidtracker\\src\\components\\Card.js":"8","C:\\Users\\Amine\\Documents\\Dev\\Projet\\covidtracker\\src\\components\\Intro.js":"9","C:\\Users\\Amine\\Documents\\Dev\\Projet\\covidtracker\\src\\components\\Scroller.js":"10","C:\\Users\\Amine\\Documents\\Dev\\Projet\\covidtracker\\src\\components\\Loading.js":"11"},{"size":512,"mtime":1610717928723,"results":"12","hashOfConfig":"13"},{"size":37700,"mtime":1611923996221,"results":"14","hashOfConfig":"13"},{"size":980,"mtime":1611867005611,"results":"15","hashOfConfig":"13"},{"size":96,"mtime":1611160776850,"results":"16","hashOfConfig":"13"},{"size":2800,"mtime":1611920338531,"results":"17","hashOfConfig":"13"},{"size":1983,"mtime":1611872609300,"results":"18","hashOfConfig":"13"},{"size":2418,"mtime":1611870772949,"results":"19","hashOfConfig":"13"},{"size":522,"mtime":1611823707331,"results":"20","hashOfConfig":"13"},{"size":897,"mtime":1611875757633,"results":"21","hashOfConfig":"13"},{"size":1273,"mtime":1611859590893,"results":"22","hashOfConfig":"13"},{"size":516,"mtime":1611869027253,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"6b64ml",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"C:\\Users\\Amine\\Documents\\Dev\\Projet\\covidtracker\\src\\index.js",[],["50","51"],"C:\\Users\\Amine\\Documents\\Dev\\Projet\\covidtracker\\src\\App.js",[],"C:\\Users\\Amine\\Documents\\Dev\\Projet\\covidtracker\\src\\components\\SelectList.js",["52","53"],"import React from \"react\";\r\nimport { Select } from \"antd\";\r\nimport { NativeSelect, FormControl } from \"@material-ui/core\";\r\n\r\nconst SelectList = ({ onCountryChange, countriesList, loading }) => {\r\n  function onChange(value) {\r\n    console.log(`selected in children ${value}`);\r\n    onCountryChange(value);\r\n  }\r\n\r\n  // List des pays provenant de l'API\r\n  const selectedCountry = countriesList.map((value) => {\r\n    return (\r\n      <option className=\"optionList\" key={value.name} value={value.name}>\r\n        {value.name}\r\n      </option>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <Select\r\n        showSearch\r\n        style={{ width: 210 }}\r\n        placeholder=\"Choix du pays\"\r\n        optionFilterProp=\"children\"\r\n        onChange={onChange}\r\n        filterOption={(input, option) =>\r\n          option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n        }\r\n      >\r\n        {selectedCountry}\r\n      </Select>\r\n    </div>\r\n  );\r\n};\r\nexport default SelectList;\r\n","C:\\Users\\Amine\\Documents\\Dev\\Projet\\covidtracker\\src\\components\\index.js",[],"C:\\Users\\Amine\\Documents\\Dev\\Projet\\covidtracker\\src\\components\\Chart.js",["54"],"import React, { useEffect, useState } from \"react\";\r\nimport { Line, Bar } from \"react-chartjs-2\";\r\nimport {} from \"react-chartjs-2\";\r\n\r\nconst Chart = ({\r\n  dataGb: { confirmed, recovered, deaths, lastUpdate },\r\n  data,\r\n  selected,\r\n  timeLine,\r\n}) => {\r\n  const [dailyData, setDailyData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setDailyData(timeLine.data);\r\n  }, [timeLine]);\r\n  // console.log(\"DATAGB\", confirmed, recovered, deaths, lastUpdate);\r\n  // console.log(\"DATA\", data);\r\n  // console.log(\"TIMELINE\", timeLine.data[0].Date);\r\n  // console.log(\"TIMELINE STATE\", dailyData);\r\n\r\n  // dailyData\r\n  //   .filter((data) => {\r\n  //     return data.Country === selected && data.Province === \"\";\r\n  //   })\r\n  //   .map((data) => {\r\n  //     return data.Deaths;\r\n  //   });\r\n\r\n  const barChart = (\r\n    <Bar\r\n      className=\"chart\"\r\n      data={{\r\n        labels: dailyData\r\n          .filter((data) => {\r\n            return data.Country === selected && data.Province === \"\";\r\n          })\r\n          .map((data) => {\r\n            // data.Date.toLocaleDateString();\r\n            const event = new Date(data.Date);\r\n            const options = {\r\n              year: \"numeric\",\r\n              month: \"long\",\r\n            };\r\n            return event.toLocaleDateString(\"fr-FR\", options);\r\n          }),\r\n        datasets: [\r\n          {\r\n            data: dailyData\r\n              .filter((data) => {\r\n                return data.Country === selected && data.Province === \"\";\r\n              })\r\n              .map((data) => {\r\n                return data.Confirmed;\r\n              }),\r\n            label: \"Confirmés\",\r\n            borderColor: \"#6930c3\",\r\n            backgroundColor: \"#6930c3\",\r\n\r\n            fill: true,\r\n          },\r\n          {\r\n            data: dailyData\r\n              .filter((data) => {\r\n                return data.Country === selected && data.Province === \"\";\r\n              })\r\n              .map((data) => {\r\n                return data.Recovered;\r\n              }),\r\n            label: \"Guérisons\",\r\n            borderColor: \"#16c79a\",\r\n            backgroundColor: \"#16c79a\",\r\n            fill: true,\r\n          },\r\n          {\r\n            data: dailyData\r\n              .filter((data) => {\r\n                return data.Country === selected && data.Province === \"\";\r\n              })\r\n              .map((data) => {\r\n                return data.Deaths;\r\n              }),\r\n            label: \"Morts\",\r\n            borderColor: \"#ec4646\",\r\n            backgroundColor: \"#ec4646\",\r\n            fill: true,\r\n          },\r\n        ],\r\n      }}\r\n      options={{ maintainAspectRatio: false }}\r\n    />\r\n  );\r\n  console.log(\"MYDATA\", timeLine.data);\r\n  return (\r\n    <>\r\n      <div className=\"chartMain\">{barChart}</div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","C:\\Users\\Amine\\Documents\\Dev\\Projet\\covidtracker\\src\\components\\Cards.js",[],"C:\\Users\\Amine\\Documents\\Dev\\Projet\\covidtracker\\src\\components\\Map.js",["55"],"import React, { Component, Fragment } from \"react\";\r\nimport mapboxgl from \"mapbox-gl\";\r\nimport \"mapbox-gl/dist/mapbox-gl.css\";\r\nimport * as countryz from \"../country.json\";\r\n\r\nmapboxgl.accessToken =\r\n  \"pk.eyJ1IjoiYW1pbmVhYmRlbGxpIiwiYSI6ImNranU1ZWZzczJ6bjcyem1qZ25zb3UxbjYifQ.hbedsblNSZl7EnltQgLLkQ\";\r\n\r\nlet centroid;\r\nlet map, markers; // Bonne pratique ou non??????\r\nexport default class Map extends Component {\r\n  state = {\r\n    lng: 2.3863,\r\n    lat: 47.161,\r\n    zoom: 4,\r\n    loading: true,\r\n  };\r\n\r\n  componentDidMount() {\r\n    // Création de la carte\r\n    map = new mapboxgl.Map({\r\n      container: this.mapContainer,\r\n      style: \"mapbox://styles/amineabdelli/ckjuc8dph019219o4mu8r4lth\",\r\n      center: [this.state.lng, this.state.lat],\r\n      zoom: this.state.zoom,\r\n    });\r\n    // Focus de la carte par défault\r\n    // map.on(\"move\", () => {\r\n    //   console.log(\"MAP.ON MOVE\");\r\n    //   this.setState({\r\n    //     lng: map.getCenter().lng.toFixed(4),\r\n    //     lat: map.getCenter().lat.toFixed(4),\r\n    //     zoom: map.getZoom().toFixed(2),\r\n    //   });\r\n    // });\r\n\r\n    // Ajout des marqueurs par défaut au premier rendu\r\n    markers = Object.entries(this.props.dataTargeted).map(\r\n      ([key, value], index) => {\r\n        return new mapboxgl.Marker({\r\n          color: \"#FFFFFF\",\r\n          draggable: false,\r\n        })\r\n          .setLngLat([value.long, value.lat])\r\n          .addTo(map);\r\n      }\r\n    );\r\n  }\r\n\r\n  componentDidUpdate(/*prevProps, prevState, snapshot*/) {\r\n    // Suppresion anciens marqueurs\r\n    markers.forEach((marker) => marker.remove());\r\n\r\n    // Ajout des nouveaux marqueurs // Marqueurs OK\r\n    markers = Object.entries(this.props.dataTargeted).map(([key, value]) => {\r\n      centroid = value;\r\n      return new mapboxgl.Marker({\r\n        color: \"#FFFFFF\",\r\n        draggable: false,\r\n      })\r\n        .setLngLat([value.long, value.lat])\r\n        .addTo(map);\r\n    });\r\n    // fetch de country.json\r\n    Object.entries(countryz.default).map(([key, count]) => {\r\n      if (count.name === centroid.countryRegion) {\r\n        map.flyTo({\r\n          center: [count.long, count.lat],\r\n          zoom: 4,\r\n          essential: true,\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        {/*  {this.myMap} */}\r\n        <div className=\"mapContainer\" ref={(el) => (this.mapContainer = el)} />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\Amine\\Documents\\Dev\\Projet\\covidtracker\\src\\components\\Card.js",[],"C:\\Users\\Amine\\Documents\\Dev\\Projet\\covidtracker\\src\\components\\Intro.js",[],"C:\\Users\\Amine\\Documents\\Dev\\Projet\\covidtracker\\src\\components\\Scroller.js",["56","57","58","59","60","61"],"C:\\Users\\Amine\\Documents\\Dev\\Projet\\covidtracker\\src\\components\\Loading.js",[],{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":3,"column":10,"nodeType":"68","messageId":"69","endLine":3,"endColumn":22},{"ruleId":"66","severity":1,"message":"70","line":3,"column":24,"nodeType":"68","messageId":"69","endLine":3,"endColumn":35},{"ruleId":"66","severity":1,"message":"71","line":2,"column":10,"nodeType":"68","messageId":"69","endLine":2,"endColumn":14},{"ruleId":"72","severity":1,"message":"73","line":65,"column":57,"nodeType":"74","messageId":"75","endLine":65,"endColumn":59},{"ruleId":"66","severity":1,"message":"76","line":2,"column":8,"nodeType":"68","messageId":"69","endLine":2,"endColumn":17},{"ruleId":"66","severity":1,"message":"77","line":4,"column":8,"nodeType":"68","messageId":"69","endLine":4,"endColumn":16},{"ruleId":"66","severity":1,"message":"78","line":5,"column":8,"nodeType":"68","messageId":"69","endLine":5,"endColumn":20},{"ruleId":"66","severity":1,"message":"79","line":6,"column":10,"nodeType":"68","messageId":"69","endLine":6,"endColumn":23},{"ruleId":"66","severity":1,"message":"80","line":8,"column":10,"nodeType":"68","messageId":"69","endLine":8,"endColumn":17},{"ruleId":"66","severity":1,"message":"81","line":10,"column":7,"nodeType":"68","messageId":"69","endLine":10,"endColumn":16},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],"no-unused-vars","'NativeSelect' is defined but never used.","Identifier","unusedVar","'FormControl' is defined but never used.","'Line' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'PropTypes' is defined but never used.","'ListItem' is defined but never used.","'ListItemText' is defined but never used.","'FixedSizeList' is defined but never used.","'Divider' is defined but never used.","'useStyles' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]